\documentclass[10pt,fleqn]{beamer}

\usepackage{lmodern}
\usepackage{knmiBeamer}
\usepackage{multirow}
\usepackage[skins]{tcolorbox}

\Engelstrue     % For English slides 
\renewcommand{\titleFigure}{figure/fogCover.jpg}

\usepackage{tikz}
\usepackage{verbatim}
\usetikzlibrary{arrows, shapes}

% ---------------
% Graphics folder
% ---------------
\graphicspath{{figure/}}

\title[Fog detection]{DataLab project: fog detection using cameras}
\subtitle{KNMI DataLab Meeting}
\date{September 27, 2017}
\author[Pagani, Roth, Wauben]{G.A. Pagani, M. Roth\\ and W. Wauben}
%\author[M. Roth (\MYhref{mailto:roth@knmi.nl}{roth@knmi.nl})]{Martin Roth\texorpdfstring{\\[2mm] \scriptsize \href{mailto:roth@knmi.nl}{roth@knmi.nl}\\[4mm] {\scriptsize Joint work with A. Buishand and G. Jongbloed}}{}}

\begin{document}
\tikzstyle{every picture}+=[remember picture]


<< Libraries, include=FALSE>>=
library(data.table)
library(imager)
library(visDec)
library(ggplot2)
library(rpart)
library(rattle)
library(rgdal)
library(ggmap)

library(DBI)
library(jsonlite)
library(data.table)
library(caret)


knitr::opts_chunk$set(
  echo = FALSE, cache = TRUE
)
@

\begin{frame}
 \titlepage
\end{frame}

 \begin{frame}{Outline}
  \begin{itemize}
  \item Motivation for Fog
   \item Purpose
   \item Approach
   \item Results (till Dec 2016)
   \item RWS project phase (since Jan 2017)
   \item Conclusion
%   \item Idea and SWI
%   \item Dehaze algorithm
%   \item Results so far
%   \item Cameras and sensors
 \end{itemize}
 \end{frame}


% 20 MINUTES presentation









\begin{frame}{Fog as hazard}
 \begin{textblock*}{5cm}(7.4cm,2.4cm)
  \includegraphics[width=5cm]{Accident.jpeg}
 \end{textblock*}
 \begin{textblock*}{5cm}(7.4cm,5.5cm)
  \includegraphics[width=5cm]{airplane.jpg}
 \end{textblock*}
\begin{itemize}
  \item Substantial impact on air,\\ marine, and road traffic
  \item Loss of life comparable to that of\\ tornadoes or even winter storms\footnote{Gultepe, I. et al. (2007): Fog research: A review of past achievements and future perspectives. \emph{Pure and Applied Geophysics}, \textbf{164}, 1121--1159.}
  \item May form and dissipate suddenly
  \item Often only a local phenomenon
  \item Not easy to accurately forecast
  \item Satellites are not pointing to NL 24/7
 \end{itemize}
\end{frame}

\begin{frame}{Purpose, Scope, Benefits}
\begin{itemize}
\item \textbf{Purpose:} use cameras to identify fog conditions to issue safety hazards
\item \textbf{Scope:} daylight fog identification from static cameras using image analysis
\item \textbf{Benefits:}
\begin{itemize}
\item \textit{Society: }
\begin{itemize}
\item human lives
\item economic
\end{itemize}
\item \textit{KNMI:}
\begin{itemize}
\item better widespread observations of fog conditions
\item feed the fog observations in KNMI models (re-analysis) $\Rightarrow$ better fog modeling/predictions
\end{itemize}
\end{itemize}

\end{itemize}
\end{frame}

\begin{frame}{Approach: availability of sensors and traffic cameras}
 \begin{textblock*}{5cm}(1.2cm,3.0cm)
  \includegraphics[width=5cm]{SensorPlacement.png}
 \end{textblock*}
 \begin{textblock*}{5cm}(7.0cm,3.7cm)
  \includegraphics[width=5cm]{CameraPlacement.jpg}
 \end{textblock*}
\end{frame}



<< ExamplePictures, include=FALSE, cache=FALSE>>=
path <- system.file("extdata/Meetterrein", package="visDec")
filenames <- list.files(path,
                        pattern=glob2rx("Meetterrein_201510*.jpg"),
                        full.names=TRUE)
@


\begin{frame}{Approach: Machine Learning in a small nutshell}
Machine learning is the systematic study of algorithms and systems that improve
their knowledge or performance with experience.
\begin{center}
\includegraphics[width=8cm]{figreML.png}
\end{center}

\end{frame}





\begin{frame}{Machine learning approach: features extracted from images}
\begin{itemize}
\begin{footnotesize}
\item{Mean Edges: for finding the boundaries of objects within images. It works by detecting discontinuities in the image (e.g., foreground and background elements).}
\item{Mean Brightness: perception of a source of radiating/reflecting light.}
\item{Mean Saturation: is a measure of the purity of the color. The purest (most saturated) color is achieved by using just one wavelength, less pure come from a combination at different wavelengths.}
\item{Mean HUE: perception of a source of being similar to one of the perceived colors: red, yellow, green, and blue, or to a combination of two of them.}
\item{Fractal Dimension: self similarity in filling space.}
\item{Transmission smoothness: transmission of the darkchannel of the image (smoothed indicator).}
\item{Transmission changepoint: horizontal point where the transmission of the dark channel is subject to change.}
\end{footnotesize}
\end{itemize}
\end{frame}
% 
% 
% 
% 
% 
% 
% 
% 
% 
% 
% 
\begin{frame}{Machine learning approach}
\vspace*{-5mm}
Example elaboration and feature: edge detection
<<LandmarkPlotClear, cache=TRUE, echo=FALSE, fig.height=4.2, fig.width=8.4>>=
im <- subim(load.image("figure/Meetterrein_20150703_0320.jpg"), y > 16)


old_par <- par(mfrow=c(1,2))
plot(im)
#DetectEdges(im) %>% plot

#im <- subim(load.image(filenames[49]), y > 16)
#plot(im)
DetectEdges(im) %>% threshold(thr="98%") %>% plot()
par(old_par)
@
 \begin{textblock*}{10cm}(1.5cm,8cm)
  Consider the mean number of edges in the picture as feature.
 \end{textblock*}
\end{frame}





\begin{frame}{Machine Learning: De Bilt classification tree} 
\scriptsize{keys for reading a node:\\
 fraction of fog cases in the node/sub-tree\\
 \# of cases  \textemdash \% of total cases}
 
<<Classification, include=FALSE>>=
load("results/deBiltResults2015.RData")
imageSummary[, dayIsEven := mday(dateOnly) %% 2]
train <- imageSummary[, .(dateTime, MOR, meanEdge, changePoint, meanBrightness)]
train <- na.omit(train)
train[, foggy := MOR < 250]
fogTree <- rpart(foggy ~ meanEdge + changePoint + meanBrightness, train , control = rpart.control(cp = 0.019))
pred <- predict(fogTree, train, method="class")
train[, pred := pred]
@
<<ClassificationTree, echo=FALSE, fig.height=4>>=
fancyRpartPlot(fogTree, sub="")
@
% keys for reading a node:
% fraction of fog cases in the node/sub-tree
% # of cases
% \% of total cases
\end{frame}


<<resultsDeBilt, include=FALSE, warning=FALSE>>=
dbConfig <- fromJSON("config.json")



con <- dbConnect(RPostgreSQL::PostgreSQL(),
                 dbname = "FOGDB",
                 host = dbConfig[["host"]], port = 9418,
                 user = dbConfig[["user"]], password = dbConfig[["pw"]])



#Get meteo conditions for De Bilt
tableMeteo <- dbGetQuery(con, "SELECT * from meteo_features_stations
                                  WHERE location_id =1;")

#Get features for De Bilt images

tableFeatures <- dbGetQuery(con, "SELECT * from image_features
                                  WHERE camera_id =1;")


tableMeteo <- data.table(tableMeteo)
tableMeteo[, foggy := mor_visibility < 250]


tableFeatures <- data.table(tableFeatures)

setkey(tableFeatures,timestamp)

setkey(tableMeteo,timestamp)




fullTable <- tableFeatures[tableMeteo,]
train <- fullTable[year(timestamp)==2016,]
test <- fullTable[year(timestamp)<2016,]

train<-train[is.na(foggy)==FALSE]
train[,foggy:= as.factor(foggy)]
trainDB<-dim(train)[1]


test<-test[is.na(foggy)==FALSE]
test[,foggy:=as.factor(foggy)]
testDB<-dim(test)[1]



tree<-rpart(foggy~mean_edge+change_point+smoothness+fractal_dim+mean_hue+mean_saturation+mean_brightness, data=train)

#rf <- train(foggy~mean_edge+change_point+smoothness+fractal_dim+mean_hue+mean_saturation+mean_brightness, data=train, method="rf",na.action=na.exclude)

prova<-predict(tree, newdata = test, method ="class")
prova<-data.frame(prova)
matDB<-confusionMatrix(ifelse(prova$TRUE.>0.3, TRUE, FALSE), test$foggy,mode = "prec_recall", positive = "TRUE")

confMatDeBilt<-matDB$table
@


<<resultsCabauw, include=FALSE, warning=FALSE>>=

#Get meteo conditions for Twente
tableMeteo <- dbGetQuery(con, "SELECT * from meteo_features_stations
                                  WHERE location_id =3;")

#Get features for Twente images

tableFeatures <- dbGetQuery(con, "SELECT * from image_features
                                  WHERE camera_id =3;")


tableMeteo <- data.table(tableMeteo)
tableMeteo[, foggy := mor_visibility < 250]


tableFeatures <- data.table(tableFeatures)

setkey(tableFeatures,timestamp)

setkey(tableMeteo,timestamp)




fullTable <- tableFeatures[tableMeteo,]
train <- fullTable[year(timestamp)==2017,]
test <- fullTable[year(timestamp)==2016,]

train<-train[is.na(foggy)==FALSE]
train[,foggy:= as.factor(foggy)]
trainCab<-dim(train)[1]


test<-test[is.na(foggy)==FALSE]
test[,foggy:=as.factor(foggy)]
testCab<-dim(test)[1]



tree<-rpart(foggy~mean_edge+change_point+smoothness+fractal_dim+mean_hue+mean_saturation+mean_brightness, data=train)

#rf <- train(foggy~mean_edge+change_point+smoothness+fractal_dim+mean_hue+mean_saturation+mean_brightness, data=train, method="rf",na.action=na.exclude)

prova<-predict(tree, newdata = test, method ="class")
prova<-data.frame(prova)
matCab<-confusionMatrix(ifelse(prova$TRUE.>0.3, TRUE, FALSE), test$foggy,mode = "prec_recall", positive = "TRUE")

confMatCabauw<-matCab$table

@

\begin{frame}{Results:}
\begin{textblock*}{4cm}(1.5cm,4.0cm)
De Bilt camera:\\ reference\\
\begin{textblock*}{4cm}(0cm,5cm) 
prediction
\end{textblock*}
<<echo=FALSE>>=
kable(confMatDeBilt)
@
<<echo=FALSE>>=
kable(matDB$byClass[5:6])
@
\vspace{0.2cm}
Train set (year 2016): \Sexpr{trainDB}\\
Test set (6-12/2015): \Sexpr{testDB}\\
\end{textblock*}

\begin{textblock*}{4cm}(8.0cm,4.0cm) 
Cabauw camera: reference\\
\begin{textblock*}{4cm}(6.5cm,5cm) 
prediction
\end{textblock*}
<<echo=FALSE>>=
kable(confMatCabauw)
@
<<echo=FALSE>>=
kable(matCab$byClass[5:6])
@
\vspace{0.2cm}
Train set (year 2017): \Sexpr{trainCab}\\
Test set (10-12/2016): \Sexpr{testCab}\\
\end{textblock*}

\end{frame}

\begin{frame}{Twente KNMI station}\centering
%The situation in Twente is different for two reasons, the wide angle of the
%camera makes the horizontal averaging of the transmission rate less appropriate.
%Moreover, even on a clear day there are only a few edges in the image (which are
%mostly very close to the camera, i.e. from the equipment of the automatic 
%weather station). Nevertheless, it was quite simple to detect failures of the 
%visibility sensor using the two described features, such as during the afternoon
%of August 23 2015, where the sensor consistently gave $MOR < 250$, although the 
%image is very clear.
 \includegraphics[width=5cm]{EHTW_201508231400.jpg}
 \begin{itemize}
  \item fish-eye lens
  \item only a few edges in the range of 50--250\,m
  \item fully unprotected camera
 \end{itemize}
\end{frame}




\begin{frame}{Twente: weather (un)protection}%\centering
\begin{columns}
\column{0.2\textwidth}
\includegraphics[height=2cm]{figure/wideCamera}

\column{0.8\textwidth}
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201506280400.jpg} \\
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201510060700.jpg} \\

\end{columns}
\begin{textblock*}{5cm}(6.2cm,3.85cm)
Ice on the camera enclosure\\
\vspace{2.7cm}
Water drops on the camera enclosure
\end{textblock*}



\end{frame}








<<ClassificationTwente, echo=FALSE>>=
dataTwente <-readRDS("results/ResultsTwente2015-2016_3hSun.rds")
 offsetBeforeSunrise <- 0
# #time in minutes
 offsetAfterSunset <- 0
 trainDeBilt <- imageSummary[dateTime> sunriseDateTime - offsetBeforeSunrise * 60 & dateTime < sunsetDateTime + offsetAfterSunset * 60, ]
dataTwente <- dataTwente[dateTime > sunriseDateTime & dateTime < sunsetDateTime, ]
 dataTwente[, foggy := MOR < 250]
 setkey(dataTwente, dateTime)
#
#
 source("scripts/ReadMeteoData.R")
 windTwente <-ReadWindData("inst/extdata/Sensor/TwenteWind1-1-2015-31-08-2016.csv")
 setkey(windTwente, dateTime)
#
#
humidityTwente <-ReadHumidityData("inst/extdata/Sensor/TwenteHumidity1-1-2015-31-08-2016.csv")
 setkey(humidityTwente, dateTime)
#
#
 tempDewPointTwente <-ReadTempDewPointData("inst/extdata/Sensor/TwenteTemp_DewPoint1-1-2015-31-08-2016.csv")
 setkey(tempDewPointTwente, dateTime)
#
#
precipitationTwente <-ReadPrecipitationData("inst/extdata/Sensor/TwenteRainAll-1-2015-31-08-2016.csv")
 precipitationTwente[, rain := FALSE]
rainDuration <- 400
 precipitationTwente[precipitationDurationPWS > rainDuration | precipitationDurationElec > rainDuration, rain:= TRUE]
setkey(precipitationTwente, dateTime)
#
#
#
#
dataTwente <- SynchronizeSensorReadingsNoMORPicture(windTwente, dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(humidityTwente,dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(tempDewPointTwente, dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(precipitationTwente, dataTwente)
#
#
dataTwente <- na.omit(dataTwente)
#
trainTwente <- dataTwente[year==2015, .(dateTime, meanEdge, changePoint, smoothness, meanHue, meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint, precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]
#
testTwente <- dataTwente[year==2016, .(dateTime, meanEdge, changePoint, smoothness, meanHue, meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint, precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]
#
#
fogTree <- rpart(foggy ~ meanEdge + changePoint + meanBrightness, trainTwente, control = rpart.control(cp = 0.019))


twentePred<-predict(fogTree, newdata = testTwente, method ="class")
twentePred<-data.frame(twentePred)
matTwente<-confusionMatrix(ifelse(twentePred>0.3, TRUE, FALSE), testTwente$foggy,mode = "prec_recall", positive = "TRUE")


@



<<ClassificationTwenteMeteo, echo=FALSE>>=

 noRainDataTwente <- dataTwente[precipitationDurationElec<600 & windSpeed<3.5,]

 #noRainDataTwente <- noRainDataTwente[day!=23 & month!=08 & year!=2015,]

  removedFoggyRainOrHighWind <- dataTwente[foggy==TRUE, .N] - noRainDataTwente[foggy==TRUE, .N]
 datesOfFoggyRainOrHighWind <- dataTwente[dateTime%in%setdiff(dataTwente[foggy==TRUE]$dateTime,noRainDataTwente[foggy==TRUE]$dateTime)]$dateTime

trainTwenteNoRain <- noRainDataTwente[year==2015, .(dateTime, meanEdge, changePoint, smoothness, meanHue, meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint, precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]

testTwenteNoRain <- noRainDataTwente[year==2016, .(dateTime, meanEdge, changePoint, smoothness, meanHue, meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint, precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]

  fogTreeNoRain <- rpart(foggy ~ meanEdge + changePoint + meanBrightness +
                                   relHumidity + windSpeed + airTemperature + dewPoint + precipitationIntElec +
                                   precipitationIntPWS + precipitationDurationElec + precipitationDurationPWS,
                                   trainTwenteNoRain , control = rpart.control(cp = 0.015))

twentePredNoRain<-predict(fogTreeNoRain, newdata = testTwenteNoRain, method ="class")
twentePredNoRain<-data.frame(twentePredNoRain)
matTwenteNoRain<-confusionMatrix(ifelse(twentePredNoRain>0.3, TRUE, FALSE), testTwenteNoRain$foggy,mode = "prec_recall", positive = "TRUE")

@





\begin{frame}{Results Twente:}
\begin{textblock*}{4cm}(1.5cm,4.0cm)
Twente camera:\\ reference\\
\begin{textblock*}{4cm}(0cm,5cm) 
prediction
\end{textblock*}
<<echo=FALSE>>=
kable(matTwente$table)
@
<<echo=FALSE>>=
kable(matTwente$byClass[5:6])
@
\vspace{0.2cm}
Train set (year 2015): \Sexpr{dim(trainTwente)[1]}\\
Test set (year 2016): \Sexpr{dim(testTwente)[1]}\\
\end{textblock*}

\begin{textblock*}{4cm}(8.0cm,4.0cm) 
Twente camera rain+wind filtered\footnote{precipitationDurationElec$<$600 and windSpeed$<$3.5}: reference\\
\begin{textblock*}{4cm}(6.5cm,5cm) 
prediction
\end{textblock*}
<<echo=FALSE>>=
kable(matTwenteNoRain$table)
@
<<echo=FALSE>>=
kable(matTwenteNoRain$byClass[5:6])
@
\vspace{0.2cm}
Train set (year 2015): \Sexpr{dim(trainTwenteNoRain)[1]}\\
Test set (year 2016): \Sexpr{dim(testTwenteNoRain)[1]}\\
\end{textblock*}

\end{frame}

\begin{frame}{How to compute +100k images?}
\begin{textblock*}{5cm}(0.5cm,4cm)
\begin{itemize}
\item{Use of cloud providers}
\item{To avoid kill workstations}
\item{To learn this modern computation paradigm}
\item{Hands on with different providers}
\end{itemize}
 \end{textblock*}

\begin{textblock*}{5cm}(6cm,5cm)
  \includegraphics[width=5cm]{cloud.png}
 \end{textblock*}

\end{frame}



\begin{frame}{Cloud investigation in a nutshell}
\vspace*{-0.25cm}
\begin{footnotesize}
\begin{center}
\hspace*{-0.5cm}
    \begin{tabular}{| p{1cm} | p{2cm} | p{3.5cm} | p{3.5cm} |}
    \hline
    Provider & Positive & Negative & Next steps \\ \hline
    Google & Up and running in minutes\newline Clear documentation & Limitations of free period (no clone, 1 machine) &
Test more machines and distributed setting\newline
Creation and administration via script \\ \hline
    Amazon & Clear-Easy documentation\newline Cloning\newline Shared storage & Free tier is very limited &
Test non-capped machines\newline Running more than 20 machines\newline Creation and administration via script\\ \hline
ECMWF & Free+- & Constraints of the architecture, languages, compilers\newline Limited experience in non traditional languages &
Wait for a solution of the bug \\ \hline
SurfSara & Kind technical service (once contacted)\newline Fast connectivity\newline & 
Long time to up and running\newline
Open Nebula more confusing than “Big Providers”\newline
Less documentation\newline
Bugs/issues: time consuming &
Might be to exploit because KNMI is partner since recently\\ \hline

    \end{tabular}
\end{center}
\end{footnotesize}
\end{frame}

\begin{frame}{New project phase with RWS (since Jan 2017)}
\begin{itemize}
\item Goal: test approach in a more operational-oriented situation
\item Have more data (i.e., images) to test the approach
\item Deal with moving cameras
\item Re-size the approach to deal with more data feeds
\end{itemize}
\end{frame}

\begin{frame}{More data sets}
\begin{columns}
\column{0.6\textwidth}
\begin{itemize}
\item More datasets have been hunted ;-)
\item Let's not talk about privacy issues, please!

\item New datasets: 
\begin{itemize}
\item 4 Dutch airports: 7 cameras
\item 160 cameras along A15-A16-A4-A5-A1-A9-A50-A12-A27-A2 NL highways
\item 37 cameras along M90 Scottish motorway (test purposes)
\end{itemize}
\end{itemize}
\column{0.4\textwidth}
%\begin{textblock*}{8cm}(6cm,1cm)
  \includegraphics[width=4.5cm]{camerasRWS.png}
% \end{textblock*}
\end{columns}

\end{frame}

%\begin{frame} {Classification Twente with \underline{meteo features}}%\centering

%Based on image features and meteo features (air temperature, dew point, wind speed, relative humidity)



 % \begin{columns}
 % \column{0.5\textwidth}
 % \textbf{\textit{Image-only features}}


%\end{frame}






\end{document}