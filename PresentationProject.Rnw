\documentclass[10pt,fleqn]{beamer}

\usepackage{lmodern}
\usepackage{knmiBeamer}
\usepackage{multirow}
\Engelstrue     % For English slides 

% ---------------
% Graphics folder
% ---------------
\graphicspath{{figure/}}

\title{Fog detection using cameras}
\author{Wiel, Andrea and Martin}
%\author[M. Roth (\MYhref{mailto:roth@knmi.nl}{roth@knmi.nl})]{Martin Roth\texorpdfstring{\\[2mm] \scriptsize \href{mailto:roth@knmi.nl}{roth@knmi.nl}\\[4mm] {\scriptsize Joint work with A. Buishand and G. Jongbloed}}{}}

\begin{document}

<< Libraries, include=FALSE>>=
library(data.table)
library(imager)
library(visDec)
library(ggplot2)
library(rpart)
library(rattle)
@

\begin{frame}
 \titlepage
\end{frame}

% \begin{frame}{Outline}
%  \begin{itemize}
%   \item Motivation for Fog
%   \item Zubin's work
%   \item Edge detection
%   \item Idea and SWI
%   \item Dehaze algorithm
%   \item Results so far
%   \item Cameras and sensors
%  \end{itemize}
% \end{frame}

\begin{frame}{Fog as hazard}
 \begin{textblock*}{5cm}(7.4cm,2.4cm)
  \includegraphics[width=5cm]{Accident.jpeg}
 \end{textblock*}
 \begin{textblock*}{5cm}(7.4cm,5.5cm)
  \includegraphics[width=5cm]{airplane.jpg}
 \end{textblock*}
\begin{itemize}
  \item Substantial impact on air,\\ marine, and road traffic
  \item Loss of life comparable to that of\\ tornadoes or even winter storms\footnote{Gultepe, I. et al. (2007): Fog research: A review of past achievements and future perspectives. \emph{Pure and Applied Geophysics}, \textbf{164}, 1121--1159.}
  \item May form and dissipate suddenly
  \item Often only a local phenomenon
 \end{itemize}
\end{frame}

\begin{frame}{Availability of sensors and traffic cameras}
 \begin{textblock*}{5cm}(1.2cm,3.0cm)
  \includegraphics[width=5cm]{SensorPlacement.png}
 \end{textblock*}
 \begin{textblock*}{5cm}(7.0cm,3.7cm)
  \includegraphics[width=5cm]{CameraPlacement.jpg}
 \end{textblock*}
\end{frame}

<< ExamplePictures, include=FALSE, cache=FALSE>>=
path <- system.file("extdata/Meetterrein", package="visDec")
filenames <- list.files(path,
                        pattern=glob2rx("Meetterrein_201510*.jpg"),
                        full.names=TRUE)
@

\begin{frame}{Landmark discrimination}
\vspace*{-5mm}
<<LandmarkPlotClear, cache=TRUE, echo=FALSE, fig.height=4.2, fig.width=8.4>>=
im <- subim(load.image("figure/Meetterrein_20150703_0320.jpg"), y > 16)


old_par <- par(mfrow=c(1,2))
plot(im)
#DetectEdges(im) %>% plot

#im <- subim(load.image(filenames[49]), y > 16)
#plot(im)
DetectEdges(im) %>% threshold(thr="98%") %>% plot()
par(old_par)
@ 
 \begin{textblock*}{10cm}(1.5cm,8cm)
  Edge detection to identify objects.
 \end{textblock*}
\end{frame}



\begin{frame}{Global feature: Mean edges}\centering
<<meanEdgeRegression, echo=FALSE, warning=FALSE, fig.height=2, fig.width=4>>=
load("results/deBiltResults2015.RData")
ggplot(imageSummary, aes(x = log(MOR), y = meanEdge)) + geom_point() 
@
 \begin{textblock*}{10cm}(1.5cm,8cm)
  Mean edges for daily conditions from June 1 to December 31 2015.
 \end{textblock*}
\end{frame}


\begin{frame}{Global feature: Change in transmission}
\vspace*{-2mm}
<<TransmissionPlotClear, echo=FALSE, fig.height=3, fig.width=8.4>>=
im <- subim(load.image(filenames[75]), y > 16)

darkChannel       <- GetDarkChannel(im)
atmosphere        <- GetAtmosphere(im, darkChannel)
transmissionClear <- GetTransmissionEstimate(im, atmosphere)

old_par <- par(mfrow=c(1,3))
plot(im)
as.cimg(transmissionClear) %>% plot
plot(GetHorizAvgTrans(im), xlab="", ylab="")
par(old_par)
@

\vspace*{-5mm}
<<TransmissionPlotFoggy, echo=FALSE, fig.height=3, fig.width=8.4>>=
im <- subim(load.image(filenames[49]), y > 16)

darkChannel       <- GetDarkChannel(im)
atmosphere        <- GetAtmosphere(im, darkChannel)
transmissionFoggy <- GetTransmissionEstimate(im, atmosphere)

old_par <- par(mfrow=c(1,3))
plot(im)
as.cimg(transmissionFoggy) %>% plot()
plot(GetHorizAvgTrans(im), xlab="", ylab="")
par(old_par)
@
\end{frame}

% \begin{frame}{Summarize idea}
%  Use global features, e.g.
%  \begin{itemize}
%   \item mean edges
%   \item change in transmission
%   \item mean brightness 
%   \item other features ...
%  \end{itemize}
% \end{frame}


\begin{frame}{Classification tree}
<<Classification, include=FALSE>>=
load("results/deBiltResults2015.RData")
imageSummary[, dayIsEven := mday(dateOnly) %% 2]
train <- imageSummary[, .(dateTime, MOR, meanEdge, changePoint, meanBrightness)]
train <- na.omit(train)
train[, foggy := MOR < 250]
fogTree <- rpart(foggy ~ meanEdge + changePoint + meanBrightness, train , control = rpart.control(cp = 0.019))
pred <- predict(fogTree, train, method="class")
train[, pred := pred]
@
<<ClassificationTree, echo=FALSE, fig.height=4>>=
fancyRpartPlot(fogTree, sub="")
@
\end{frame}

<< TestClassification, echo=FALSE>>=
load("results/deBiltResults2016.RData")
test <- imageSummary[, .(dateTime, MOR, meanEdge, changePoint, meanBrightness)]
test <- na.omit(test)
test[, foggy := MOR < 250]
pred <- predict(fogTree, test, method="class")
test[, pred := pred]
@



\begin{frame}{Contingency tables}\centering
 \begin{tabular}{rrrr}\centering
   %& Probability / MOR    & $< 250$m                          &     $\geq 250$m  &  Total\\[2mm]
    Probability / MOR    & $< 250$m                          &     $\geq 250$m  &  Total\\[2mm]
  \textbf{2015} \qquad  $> 0.5$       & \Sexpr{train[MOR < 250 & pred > 0.5, .N]}  & \Sexpr{train[MOR >= 250 & pred > 0.5, .N]} & \Sexpr{train[pred > 0.5, .N]} \\
  $\leq 0.5$    & \Sexpr{train[MOR < 250 & pred <= 0.5, .N]}  & \Sexpr{train[MOR >= 250 & pred <= 0.5, .N]} & \Sexpr{train[pred <= 0.5, .N]} \\
  Total         & \Sexpr{train[MOR < 250, .N]}      & \Sexpr{train[MOR >= 250, .N]} & \Sexpr{train[, .N]} \\[5mm]
  %Probability / MOR    & $< 250$m                          &     $ \geq 250$m  & Total\\
  \textbf{2016} \qquad  $> 0.5$       & \Sexpr{test[MOR < 250 & pred > 0.5, .N]}  & \Sexpr{test[MOR >= 250 & pred > 0.5, .N]} & \Sexpr{test[pred > 0.5, .N]} \\
  $\leq 0.5$    & \Sexpr{test[MOR < 250 & pred <= 0.5, .N]}  & \Sexpr{test[MOR >= 250 & pred <= 0.5, .N]} & \Sexpr{test[pred <= 0.5, .N]} \\
  Total         & \Sexpr{test[MOR < 250, .N]}      & \Sexpr{test[MOR >= 250, .N]} & \Sexpr{test[, .N]}
 \end{tabular}
 %From the 9 missed events 2 occur after sunset and 7 in the morning of November 2, the MOR for the following picture is 25 meters.
 % \only<2>{\includegraphics[width=5cm]{Meetterrein_20151102_0740.jpg}}
%\end{frame}

%\begin{frame}{Contingency table 2016}\centering
 % \uncover<3>{\begin{tabular}{lrrr}
 %  Probability / MOR    & $< 250$m                          &     $ \geq 250$m  & Total\\
 %  $> 0.5$       & \Sexpr{test[MOR < 250 & pred > 0.5, .N]}  & \bf{\Sexpr{test[MOR >= 250 & pred > 0.5, .N]}} & \Sexpr{test[pred > 0.5, .N]} \\
 %  $\leq 0.5$    & \Sexpr{test[MOR < 250 & pred <= 0.5, .N]}  & \Sexpr{test[MOR >= 250 & pred <= 0.5, .N]} & \Sexpr{test[pred <= 0.5, .N]} \\
 %  Total         & \Sexpr{test[MOR < 250, .N]}      & \Sexpr{test[MOR >= 250, .N]} & \Sexpr{test[, .N]}
 % \end{tabular}}
 
 %From the 16 false alarms only 3 remain when we look at MOR$\geq 500$ meters.
 %\includegraphics[width=5cm]{Meetterrein_20160123_0940.jpg}
\end{frame}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%MODIFIED ANDREA%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}{Situation in Twente}\centering
%The situation in Twente is different for two reasons, the wide angle of the
%camera makes the horizontal averaging of the transmission rate less appropriate.
%Moreover, even on a clear day there are only a few edges in the image (which are
%mostly very close to the camera, i.e. from the equipment of the automatic 
%weather station). Nevertheless, it was quite simple to detect failures of the 
%visibility sensor using the two described features, such as during the afternoon
%of August 23 2015, where the sensor consistently gave $MOR < 250$, although the 
%image is very clear.
 \includegraphics[width=5cm]{EHTW_201508231400.jpg}
 \begin{itemize}
  \item wide angle camera
  \item only a few edges
  \item unprotected camera
 \end{itemize}
\end{frame}


\begin{frame}{Situation in Twente}\centering
\begin{itemize}
\item rectification of the image and cut helps

\begin{figure}
%\begin{subfigure}
  \centering
  \includegraphics[height=2.5cm]{inst/extdata/EHTW_201508011440.jpg}
  \hspace{0.1cm}
  \hspace{0.1cm}
  \includegraphics[height=2.5cm]{inst/extdata/EHTW_201508011440_Rectified.jpg}
%\end{subfigure}
\end{figure}
\item but reduces edges and scenery even more
\end{itemize}
\end{frame}


\begin{frame}{Problems of this class of cameras}%\centering
\begin{columns}
\column{0.2\textwidth}
\includegraphics[height=2cm]{figure/wideCamera}

\column{0.8\textwidth}
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201503240815.jpg} Light in the objective\\
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201510271350.jpg} Humidity lines in the camera enclosure\\


\end{columns}


\end{frame}

\begin{frame}{Problems of this class of cameras}%\centering
\begin{columns}
\column{0.2\textwidth}
\includegraphics[height=2cm]{figure/wideCamera}

\column{0.8\textwidth}
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201506280400.jpg} Ice on the camera enclosure\\
\includegraphics[height=3cm]{inst/extdata/cornerCasesTwente/EHTW_201510060700.jpg} Water drops on the camera enclosure\\

\end{columns}


\end{frame}



\begin{frame}{Performance classification Twente}%\centering

Based on pure image features

<<ClassificationTwente, echo=FALSE>>=
dataTwente <- readRDS("results/ResultsTwente2015-2016_3hSun.rds")
offsetBeforeSunrise <- 0 #time in minutes
offsetAfterSunset <- 0
#trainDeBilt <- imageSummary[dateTime > sunriseDateTime - offsetBeforeSunrise * 60 & dateTime < sunsetDateTime + offsetAfterSunset * 60, ]
dataTwente <- dataTwente[dateTime > sunriseDateTime & dateTime < sunsetDateTime, ]
dataTwente[, foggy := MOR < 250]
setkey(dataTwente, dateTime)


source("scripts/ReadMeteoData.R")
windTwente <- ReadWindData("inst/extdata/Sensor/TwenteWind1-1-2015-31-08-2016.csv")
setkey(windTwente, dateTime)


humidityTwente <- ReadHumidityData("inst/extdata/Sensor/TwenteHumidity1-1-2015-31-08-2016.csv")
setkey(humidityTwente, dateTime)


tempDewPointTwente <- ReadTempDewPointData("inst/extdata/Sensor/TwenteTemp_DewPoint1-1-2015-31-08-2016.csv")
setkey(tempDewPointTwente, dateTime)


precipitationTwente <- ReadPrecipitationData("inst/extdata/Sensor/TwenteRainAll-1-2015-31-08-2016.csv")
precipitationTwente[, rain := FALSE]
rainDuration <- 400
precipitationTwente[ precipitationDurationPWS > rainDuration | precipitationDurationElec > rainDuration, rain:= TRUE]
setkey(precipitationTwente, dateTime)




dataTwente <- SynchronizeSensorReadingsNoMORPicture(windTwente, dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(humidityTwente, dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(tempDewPointTwente, dataTwente)
dataTwente <- SynchronizeSensorReadingsNoMORPicture(precipitationTwente, dataTwente)


dataTwente <- na.omit(dataTwente)

trainTwente <- dataTwente[year==2015, .(dateTime, meanEdge, changePoint, smoothness, meanHue,
                meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint,
                precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]

testTwente <- dataTwente[year==2016, .(dateTime, meanEdge, changePoint, smoothness, meanHue,
                meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint,
                precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]
                
                
fogTree <- rpart(foggy ~ meanEdge + changePoint + meanBrightness, trainTwente , control = rpart.control(cp = 0.019))
@

<<ClassificationTreeTwente, echo=FALSE, fig.height=4>>=
fancyRpartPlot(fogTree, sub="")
@


\end{frame}


\begin{frame}{Confusion Table}\centering
% 
\begin{itemize}
\item {Picture-only features test set (8 months of observations)}

% 
\end{itemize}
\begin{table}
    %\setlength{\extrarowheight}{2pt}
    \begin{tabular}{cc|c|c|}
       & \multicolumn{1}{c}{} & \multicolumn{2}{c}{Reference}\\
       & \multicolumn{1}{c}{} & \multicolumn{1}{c}{FALSE}  & \multicolumn{1}{c}{TRUE} \\\cline{3-4}
       \multirow{2}*{Prediction}  & FALSE & 15736  & 34 \\\cline{3-4}
      & TRUE & 38 &6 \\\cline{3-4}
    \end{tabular}
  \end{table}
  
  \begin{itemize}
\item {Issues mentioned above play a role in the false positive/negative}
\item{Sensitivity: 0.1500000}
\item{Specificity: 0.9975910}

% 
\end{itemize}
  
% % Original
% % ##
% % ## Reference
% % ## Prediction FALSE TRUE
% % ## FALSE 15736 34
% % ## TRUE 38 6
% 
% 
 \end{frame}
% 





\begin{frame} {Performance classification Twente}%\centering

Based on image features and meteo features (air temperature, dew point, wind speed, relative humidity)

<<ClassificationTwenteMeteo, echo=FALSE>>=

noRainDataTwente <- dataTwente[precipitationDurationElec<600 & windSpeed<3.5,]

#noRainDataTwente <- noRainDataTwente[day!=23 & month!=08 & year!=2015,]

removedFoggyRainOrHighWind <- dataTwente[foggy==TRUE, .N] - noRainDataTwente[foggy==TRUE, .N]
datesOfFoggyRainOrHighWind <- dataTwente[dateTime%in%setdiff(dataTwente[foggy==TRUE]$dateTime,noRainDataTwente[foggy==TRUE]$dateTime)]$dateTime

trainTwenteNoRain <- noRainDataTwente[year==2015, .(dateTime, meanEdge, changePoint, smoothness, meanHue,
                meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint,
                precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]

testTwenteNoRain <- noRainDataTwente[year==2016, .(dateTime, meanEdge, changePoint, smoothness, meanHue,
                meanSaturation, meanBrightness, MOR, foggy, day, month, hour, windSpeed, relHumidity, airTemperature, dewPoint,
                precipitationIntElec, precipitationIntPWS, precipitationDurationElec, precipitationDurationPWS, rain) ]

fogTreeNoRain <- rpart(foggy ~ meanEdge + changePoint + meanBrightness +
                                 relHumidity + windSpeed + airTemperature + dewPoint + precipitationIntElec + 
                                 precipitationIntPWS + precipitationDurationElec + precipitationDurationPWS, 
                                 trainTwenteNoRain , control = rpart.control(cp = 0.015))


<<ClassificationTreeTwenteMeteo, echo=FALSE, fig.height=4>>=

fancyRpartPlot(fogTreeNoRain, sub="")
@

\end{frame}





\begin{frame}{Confusion Table}\centering
% 
\begin{itemize}
\item {Picture and meteo features test set (8 months of observations)}
\item{Filtered out continuous rain conditions and wind speed $\geq$ 3.5 m/s}
% 
\end{itemize}
\begin{table}
    %\setlength{\extrarowheight}{2pt}
    \begin{tabular}{cc|c|c|}
       & \multicolumn{1}{c}{} & \multicolumn{2}{c}{Reference}\\
       & \multicolumn{1}{c}{} & \multicolumn{1}{c}{FALSE}  & \multicolumn{1}{c}{TRUE} \\\cline{3-4}
       \multirow{2}*{Prediction}  & FALSE & 6743  & 14 \\\cline{3-4}
      & TRUE & 165 & 26 \\\cline{3-4}
    \end{tabular}
  \end{table}
  
  \begin{itemize}
\item {Metereological features are not selected except air temperature}
\item{Sensitivity: 0.6500000}
\item{Specificity: 0.976115}


% 
\end{itemize}
  
% % Original
% % ##
% % ## Reference
% % ## Prediction FALSE TRUE
% % ## FALSE 15736 34
% % ## TRUE 38 6
% 
% 
 \end{frame}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%MODIFIED ANDREA END%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%







<<MultiLinearRegression, include=FALSE>>=
mlm <- lm(log(MOR) ~ meanEdge + changePoint + meanBrightness, train) 
round(mlm$coefficients, 3)
predReg <- predict(mlm, train)
train[, predMOR := predReg]
@

%' \begin{frame}{Regression}
%' $$log(MOR) \sim meanEdge + changePoint + meanBrightness$$
%' 
%' \centering
%' <<UncleanPlot, warning=FALSE, echo=FALSE, fig.height=2, fig.width=3>>=
%' ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point() +
%'   geom_vline(xintercept = c(log(250), log(1000), log(3000), log(5000)), lty = 3) + 
%'   ylab("modelled log(MOR)")
%' @
%' 
%' There are some quite apparent features in this plot. For instance the points 
%' with the very low MOR and a prediction of around 10 are mostly due to an 
%' failure of the transmissometer. The values with the largest prediction on the
%' other hand correspond to different sceneries in the picture (we believed the
%' camera was fixed) or situations where it is already dark. The point on the lower
%' right corner with a prediction below 7 corresponds again to a different scenery.
%' \end{frame}

%\begin{frame}{Clean Data}
<<CleanData, echo=FALSE>>=
train[, id := 1:.N]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[predMOR > 12]
# June 22 2015 11:10 different scenery
# August 4 2015 11:00 different scenery
# September 27 19:10 / 19:20 already dark 
# October 20 18:00 already dark
#
train <- train[predMOR < 12]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[(log(MOR) < 6 & predMOR > 9)]
# November 1 2015 clear view (afer foogy period / might be time issue)
# November 2 2015 clear view (no fog)
#
train <- train[!(log(MOR) < 6 & predMOR > 9)]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[(log(MOR) > 8 & predMOR < 9)]
# June 19 2015 9:20 different scenery
# otherwise already dark
#
train <- train[!(log(MOR) > 8 & predMOR < 9)]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[(log(MOR) < 7 & predMOR > 9.5)]
# June 5 2015 too late
# September 23 too late
# November 2 clear view
# November 26 clear view
#
train <- train[!(log(MOR) < 7 & predMOR > 9.5)]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[(log(MOR) < 8 & predMOR > 10.2)]
# June too late
# July too late
# November 1 until 16 clear view
# November 1 17:10 already dark
# November 2 29:10 clear view
# November 26 8:40 clear view
#
train <- train[!(log(MOR) < 8 & predMOR > 10.2)]
#
# ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point()
#
# train[(log(MOR) < 10 & predMOR > 11)]
# June 22 already too late
# October 30 Car in the scenery
#
train <- train[!(log(MOR) < 10 & predMOR > 11)]
#
#
#
@
%\end{frame}


<<PODandFAR, include=FALSE>>=

fit <- lm(log(MOR) ~ splines::bs(predMOR, 3), train)
fitted <- predict(fit, train)

plottingPredMOR <- c(8.3, 9.05, 9.49, 9.65)
plottingFrame <- data.table(predMOR = plottingPredMOR)
@

<<PODandFAR2, include=FALSE>>=
train[MOR < 250 & predMOR < 8.3, .N]
train[MOR < 250 & predMOR < 8.3, .N] / train[MOR < 250, .N]
train[MOR > 250 & predMOR < 8.3, .N] / train[predMOR < 8.3, .N]

train[MOR < 1000 & predMOR < 9.05, .N]
train[MOR < 1000 & predMOR < 9.05, .N] / train[MOR < 1000, .N]
train[MOR > 1000 & predMOR < 9.05, .N] / train[predMOR < 9.05, .N]

train[MOR > 3000 & predMOR > 9.49, .N]
train[MOR > 3000 & predMOR > 9.49, .N] / train[MOR > 3000, .N]
train[MOR < 3000 & predMOR > 9.49, .N] / train[predMOR > 9.49, .N]

train[MOR > 5000 & predMOR > 9.65, .N]
train[MOR > 5000 & predMOR > 9.65, .N] / train[MOR > 5000, .N]
train[MOR < 5000 & predMOR > 9.65, .N] / train[predMOR > 9.65, .N]
@

\begin{frame}{Regression}
$$log(MOR) \sim meanEdge + changePoint + meanBrightness$$
<<plotRegression, echo=FALSE, fig.height=2, fig.width=3.5>>=

segments <- rbind(data.frame(x1 = 0, x2 = log(250), y1 = 8.3, y2 = 8.3, id = 1),
                  data.frame(x1 = log(250), x2 = log(250), y1 = 0, y2 = 8.3, id = 2),
                  data.frame(x1 = 0, x2 = log(1000), y1 = 9.05, y2 = 9.05, id = 3),
                  data.frame(x1 = log(1000), x2 = log(1000), y1 = 0, y2 = 9.05, id = 4),
                  data.frame(x1 = 20, x2 = log(3000), y1 = 9.49, y2 = 9.49, id = 5),
                  data.frame(x1 = log(3000), x2 = log(3000), y1 = 20, y2 = 9.49, id = 6),
                  data.frame(x1 = 20, x2 = log(5000), y1 = 9.65, y2 = 9.65, id = 7),
                  data.frame(x1 = log(5000), x2 = log(5000), y1 = 20, y2 = 9.65, id = 8)
                  )

ggplot(train, aes(x = log(MOR), y = predMOR)) + geom_point() +
  geom_smooth(method="lm", formula = y ~ splines::bs(x, 3), se=FALSE) +
  #geom_smooth(aes(x = MOR, y = predMOR), data = linePlotting, stat="identity", col = 2)
  geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2), data = segments, col = 2) +
  coord_cartesian(xlim=c(4, 11), ylim = c(7,11.5)) +
  ylab("modelled log(MOR)")
@
\end{frame}



\begin{frame}{Probability of detection and false alarm ratio}%\scriptsize

 <<PODandFAR3, echo=FALSE, fig.height=4>>=
podfar <- data.table(POD  = c(89, 98, 88, 89, 97, 96, 90, 83),
                     FAR  = c( 0.1, 18, 13, 30,  1,  1,  1,  2),
                     Hits = c(16, 46, 28, 81, 14795, 12095, 13475, 10195))
podfar[, Hits := NULL]
podfar[, year := as.factor(rep(c(2015, 2016), 4))]
visibility <- as.factor(rep(c("< 250", "< 1000", "> 3000", "> 5000"), each=2))
podfar[, visibility := factor(visibility, levels(visibility)[c(2,1,3,4)])]
podfar <- melt(podfar, c("year", "visibility"), variable.name = "criterion")
ggplot(podfar, aes(visibility, value, fill=year)) + geom_bar(position="dodge", stat="identity") + facet_wrap(~criterion, nrow=2, scales = "free_y", shrink=TRUE) + ylab("%")
@

 % \begin{tabular}{lrrrrrrrr} 
 %           & \multicolumn{2}{c}{$< 250$m}  & \multicolumn{2}{c}{$<1000$m} 
 %           &\multicolumn{2}{c}{$\geq 3000$m} & \multicolumn{2}{c}{$\geq 5000$m} \\[2mm]
 %           &  2015 & 2016 & 2015 & 2016 & 2015 & 2016  & 2015 & 2016 \\[2mm]
 % POD (\%)  & 89    & 98   & 88   & 89   & 97   & 96    &  90  & 83\\
 % FAR (\%)  & 0     & 18   & 13   & 30   & 1    & 1     &  1   & 2\\
 % Hits (\#) & 16    & 46   & 28   & 81   & 14795&12095  &13475 & 10195 
 % \end{tabular}
 
\end{frame}


% \begin{frame}{Validation plot}
% Focusing on prominent regions in the plot, we could also identify several cases
% where there is clearly an adaptation of the camera taking place and that
% sometimes the different scenery is not only present for one picture but for an
% extended period of time.
% 
% The next plot shows the modelled log(MOR) for the validation set. The 

<<plotRegressionValidation, include=FALSE, warning=FALSE, fig.height=2, fig.width=4>>=
predReg <- predict(mlm, test)
test[, predMOR := predReg]

testClean <- test[hour(dateTime) < 20]
testClean <- testClean[!(predMOR < 8.5 & log(MOR) > 7.8)] ## too dark

# testClean[predMOR > 12 & log(MOR) > 9]
# April 4 12:30 different scenery
# April 21 9:40 different scenery
#
testClean <- testClean[!(predMOR > 12 & log(MOR) > 9)]

# testClean[predMOR > 11 & log(MOR) < 9]
# January 16 heavy rain
# February 14 heavy rain
# April 8 already dark
# April 26 heavy rain
# June 23 heavy rain



ggplot(testClean, aes(x = log(MOR), y = predMOR)) + geom_point() +
    geom_smooth(method="lm", formula = y ~ splines::bs(x, 3), se=FALSE, data = train) + 
    geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2), data = segments, col = 2) +
    #geom_vline(xintercept = c(log(250), log(1000), log(3000), log(5000)), lty = 3) + 
    #geom_hline(yintercept = plottingPredMOR, lty = 3, col = 2) +
    coord_cartesian(xlim=c(4, 11), ylim = c(7,13.5)) +
    ylab("modelled log(MOR)")
@
% \end{frame}

<<PODandFARTest, include=FALSE>>=

testClean[MOR < 250 & predMOR < 8.3, .N]
testClean[MOR < 250 & predMOR < 8.3, .N] / testClean[MOR < 250, .N]
testClean[MOR > 250 & predMOR < 8.3, .N] / testClean[predMOR < 8.3, .N]

testClean[MOR < 1000 & predMOR < 9.05, .N]
testClean[MOR < 1000 & predMOR < 9.05, .N] / testClean[MOR < 1000, .N]
testClean[MOR > 1000 & predMOR < 9.05, .N] / testClean[predMOR < 9.05, .N]

testClean[MOR > 3000 & predMOR > 9.49, .N]
testClean[MOR > 3000 & predMOR > 9.49, .N] / testClean[MOR > 3000, .N]
testClean[MOR < 3000 & predMOR > 9.49, .N] / testClean[predMOR > 9.49, .N]

testClean[MOR > 5000 & predMOR > 9.65, .N]
testClean[MOR > 5000 & predMOR > 9.65, .N] / testClean[MOR > 5000, .N]
testClean[MOR < 5000 & predMOR > 9.65, .N] / testClean[predMOR > 9.65, .N]
@

\begin{frame}{Outlook}

 \begin{block}{More camera and sensor data is needed to test procedures.}
 \end{block}
 \begin{block}{Next directions}
 \begin{itemize}
  \item use additional features, e.g. wind or dew point temperature
  \item use clustering for unsupervised learning
 \end{itemize}
 \end{block}
\end{frame}

\end{document}